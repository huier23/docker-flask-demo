name: Deploy to production

on: 
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  packages: write

env:
  IMAGE_REGISTRY_URL: ghcr.io
  AZURE_RESOURCE_GROUP: rg-coding-angels-demo
  DOCKER_IMAGE_NAME: hello-azure
  AZURE_CONTAINER_APP_NAME: app-coding-angels-demo
  AZURE_WEBAPP_NAME: app-coding-angels-demi


jobs:

  Build-Docker-Image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag hello-azure:$(date +%s)

    - name: Login to GHCR
      uses: docker/login-action@v1.14.1
      with:
        registry: ${{ env.IMAGE_REGISTRY_URL }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        # password: ${{ secrets.CR_PAT }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3.7.0
      with:
        images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}
        tags: |
          type=sha,format=long,prefix=

    - name: Build and push Docker image
      uses: docker/build-push-action@v2.10.0
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  Deploy-to-Azure:
    runs-on: ubuntu-latest
    needs: Build-Docker-Image
    name: Deploy app container to Azure
    steps:
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to GHCR
        uses: azure/docker-login@v1
        with:
          login-server: ${{env.IMAGE_REGISTRY_URL}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # password: ${{ secrets.CR_PAT }}

      # - name: docker Log in to GHCR
        # run: docker login -u huier23 -p ${{ secrets.CR_PAT }} https://ghcr.io

      - name: Deploy web app container
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.AZURE_WEBAPP_NAME}}
          images: ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}:${{ github.sha }}
         

      # - name: Set up Azure extension installation
      #   if: success()
      #   run: |
      #    az config set extension.use_dynamic_install=yes_without_prompt  
      # - name: Deploy to app container
      #   if: success()
      #   run: |
      #     az containerapp update -n ${{env.AZURE_CONTAINER_APP_NAME}} -g ${{env.AZURE_RESOURCE_GROUP}} --image ${{env.IMAGE_REGISTRY_URL}}/${{ github.repository }}/${{env.DOCKER_IMAGE_NAME}}:${{github.sha}}
      
      - name: Azure logout
        run: |
          az logout
